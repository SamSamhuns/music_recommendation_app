services:
  music_analysis:
    image: music_analysis
    container_name: music_analysis_cont
    build:
      context: ./
      dockerfile: ./Dockerfile
    env_file: ./.env
    shm_size: 2gb
    ulimits:
      stack: 67108864
      memlock: -1
    ports:
      - ${FASTAPI_SERVER_PORT}:8080
    volumes:
      - type: bind
        source: ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/music_analysis
        target: /home/user1/music_analysis/volumes/music_analysis
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - pg_net

  postgres:
    build:
      context: ./music_rec/static/postgres
      dockerfile: postgres.Dockerfile
    restart: always
    ports:
      - "${POSTGRES_PORT}:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/pg_data:/var/lib/postgresql/data
      - ./music_rec/static/postgres/vector_extension.sql:/docker-entrypoint-initdb.d/0-vector_extension.sql
    networks:
      - pg_net

  pgadmin:
    image: dpage/pgadmin4:8.12.0
    restart: always
    ports:
      - ${PGADMIN_PORT}:80
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ${DOCKER_VOLUME_DIRECTORY:-.}/volumes/pgadmin_data:/var/lib/pgadmin
    networks:
      - pg_net

networks:
  pg_net:
    driver: bridge